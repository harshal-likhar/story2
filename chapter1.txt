  METHOD list_tplnrset_read.
**TRY.
*CALL METHOD SUPER->LIST_TPLNRSET_READ
*  EXPORTING
*    IO_RESPONSE =
*    IO_REQUEST  =
*    .
** CATCH /iwbep/cx_gateway .
**ENDTRY.

    TYPES: BEGIN OF my_entityset,
             tplnr  TYPE string,
             pltxt  TYPE string,
             status TYPE string,
             tplma  TYPE string,
           END OF my_entityset,
           BEGIN OF my_key_data,
             name  TYPE c LENGTH 30,
             value TYPE string,
           END OF my_key_data.

    DATA: lt_test      TYPE TABLE OF my_entityset,
          ls_entityset TYPE my_entityset,
          lt_key_data  TYPE TABLE OF my_key_data,
          ls_key_data  TYPE my_key_data,
          lv_tplnr     TYPE tplnr,
          ls_done      TYPE /IWBEP/IF_V4_REQU_BASIC_READ=>TY_S_TODO_PROCESS_LIST.


    REFRESH: lt_key_data.
    CALL METHOD io_request->get_key_data
      IMPORTING
        es_key_data = lt_key_data.

    CLEAR: ls_key_data, ls_entityset.
    READ TABLE lt_key_data INTO ls_key_data WITH KEY name = 'Tplnr'.
    IF sy-subrc = 0.
      lv_tplnr = ls_key_data-value.
      SELECT SINGLE * FROM iflotx INTO CORRESPONDING FIELDS OF ls_entityset WHERE tplnr = lv_tplnr AND spras = sy-langu.
    ENDIF.

    TRY .
        CALL METHOD io_response->set_busi_data
          EXPORTING
            is_busi_data = lt_test." ls_entityset.

        ls_done-select = 'X'.
        CALL METHOD io_response->set_is_done
          EXPORTING
            is_todo_list = ls_done.

      CATCH /iwbep/cx_gateway.

        "Fehler

    ENDTRY.
  ENDMETHOD.
  
  
  
    METHOD list_tplnrset_read_list.
**TRY.
*CALL METHOD SUPER->LIST_TPLNRSET_READ_LIST
*  EXPORTING
*    IO_REQUEST  =
*    IO_RESPONSE =
*    .
** CATCH /iwbep/cx_gateway .
**ENDTRY.

    TYPES: BEGIN OF my_entityset,
             tplnr  TYPE string,
             pltxt  TYPE string,
             status TYPE string,
             tplma  TYPE string,
           END OF my_entityset.


    DATA: ls_entityset TYPE my_entityset,
          et_entityset TYPE TABLE OF my_entityset,
          ls_done      TYPE /iwbep/if_v4_requ_basic_list=>ty_s_todo_process_list,
          lv_demo      TYPE xfeld,
          lv_where     TYPE /afm/cafm_demo-funloc_list_where.

    "FÃ¼r Demos:
    CLEAR: lv_demo, lv_where.
    SELECT SINGLE demo_active funloc_list_where FROM /afm/cafm_demo INTO ( lv_demo, lv_where ).

    IF lv_demo IS INITIAL
      OR lv_where IS INITIAL.
      SELECT  i~*, x~pltxt FROM iflot AS i
        INNER JOIN iflotx AS x
        ON i~tplnr = x~tplnr
        INTO CORRESPONDING FIELDS OF TABLE @et_entityset
        WHERE x~spras = @sy-langu.
      "AND ( tplma LIKE '4000%' ) OR ( i~tplnr = '00001-GE003' OR i~tplnr = '000001-GE003' ).
    ELSE.
      "Beschaffe die Vorauswahl
      SELECT  i~*, x~pltxt FROM iflot AS i
        INNER JOIN iflotx AS x
        ON i~tplnr = x~tplnr
        INTO CORRESPONDING FIELDS OF TABLE @et_entityset
        WHERE x~spras = @sy-langu
        AND (lv_where).
    ENDIF.

    TRY .
        CALL METHOD io_response->set_busi_data
          EXPORTING
            it_busi_data = et_entityset.

        ls_done-select = 'X'.
        CALL METHOD io_response->set_is_done
          EXPORTING
            is_todo_list = ls_done.

      CATCH /iwbep/cx_gateway.

        BREAK klappstein.

    ENDTRY.


  ENDMETHOD.
